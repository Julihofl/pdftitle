# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
#  For a library or package, you might want to ignore these files since the code is only tested against specific environments.
#  This also helps to avoid breaking changes in pyenv configuration if the project is checked out by a different developer.
.python-version

# dotenv
#  If you're using a .env file to manage environment variables, you might want to ignore it.
#  This is especially important if it contains sensitive information like API keys.
.env
.env.*

# virtualenv
#  Ignore virtual environment directories. Customize this if you use another directory name.
venv/
ENV/
env/
env.bak/
venv.bak/
*_env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# MkDocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# profiling
.prof

# Pyright static type checker
.pyright/
